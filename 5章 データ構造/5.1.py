"""
5.1 リストについての補足
"""

# list.append(x)
# リストの末尾にアイテムを1つ追加する a[len(a):] = [x]と等価
#
# list.extend(L)
# リストの末尾に、与えられたリストLの全アイテムをついkすることで、リストを伸長する
# a[len(a):] Lと等価
#
# list.insert(i, x)
# 指定された位置にアイテムを挿入する。第1引数は要素のインデックスである。
# つまり挿入はこの要素の前に行われる。
# a.insert(0, x)とするとリストの先頭に挿入されるし、
# a.insert(len(a), x)はa.append(x)と等価である
#
# list.remove(x)
# 値がxである最初のアイテムを削除する。そのようなアイテムが存在しなければエラーになる。
#
# list.pop([i])
# 指定された位置のアイテムをリストから削除し、このアイテムを返す。
# インデックスが指定されないと、a.pop()はリストの最後のアイテムを返し、リストから削除する
# このメソッドシグネチャ(定義表記)でインデックスiを囲むのに使った各カッコは、引数がオプションであることを示している
# 角カッコを入力すべきといういみではない！
#
#list.cler()
# リストから全てのアイテムを削除する
# del a[:]と対価
#
#list.index(x)
# 値がxである最初のアイテムのインデックスを返す。そのようなアイテムが存在しなければエラーになる
#
# list.count(x)
# リスト中のxの個数を返す
#
# list.sort(key = None, reverse = False)
# リストをインプレース(コピーを取らず、そのリストオブジェクトを直接)ソートする。引数でソートのカスタマイズができる。
#
# list.reverse()
# リストの要素をインプレースで逆順にする。
#
# list.copy()
# リストのシャローコピー(浅いコピー)を返す。a[:]と等価

a = [66.25, 333,333,1,1234.5]
print(a.count(333), a.count(66.25), a.count('X'))
a.insert(2,-1)
a.append(333)
print(a)
print(a.index(333))
a.remove(333)
print(a)
a.reverse()
print(a)
a.sort()
print(a)
a.pop()
print(a)
